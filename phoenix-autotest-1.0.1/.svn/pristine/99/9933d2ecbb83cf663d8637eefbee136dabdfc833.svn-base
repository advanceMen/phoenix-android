<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="zh">
<head>
<!-- Generated by javadoc (version 1.7.0_01) on Mon Feb 24 10:26:31 CST 2014 -->
<meta http-equiv="Content-Type" content="text/html" charset="UTF-8">
<title>I - 索引</title>
<meta name="date" content="2014-02-24">
<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
</head>
<body>
<script type="text/javascript"><!--
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="I - 索引";
    }
//-->
</script>
<noscript>
<div>您的浏览器已禁用 JavaScript。</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar_top">
<!--   -->
</a><a href="#skip-navbar_top" title="跳过导航链接"></a><a name="navbar_top_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">概览</a></li>
<li>程序包</li>
<li>类</li>
<li>使用</li>
<li><a href="../overview-tree.html">树</a></li>
<li><a href="../deprecated-list.html">已过时</a></li>
<li class="navBarCell1Rev">索引</li>
<li><a href="../help-doc.html">帮助</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="index-8.html">上一个字母</a></li>
<li><a href="index-10.html">下一个字母</a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?index-filesindex-9.html" target="_top">框架</a></li>
<li><a href="index-9.html" target="_top">无框架</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../allclasses-noframe.html">所有类</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<a name="skip-navbar_top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<div class="contentContainer"><a href="index-1.html">A</a>&nbsp;<a href="index-2.html">B</a>&nbsp;<a href="index-3.html">C</a>&nbsp;<a href="index-4.html">D</a>&nbsp;<a href="index-5.html">E</a>&nbsp;<a href="index-6.html">F</a>&nbsp;<a href="index-7.html">G</a>&nbsp;<a href="index-8.html">H</a>&nbsp;<a href="index-9.html">I</a>&nbsp;<a href="index-10.html">J</a>&nbsp;<a href="index-11.html">K</a>&nbsp;<a href="index-12.html">L</a>&nbsp;<a href="index-13.html">M</a>&nbsp;<a href="index-14.html">N</a>&nbsp;<a href="index-15.html">O</a>&nbsp;<a href="index-16.html">P</a>&nbsp;<a href="index-17.html">R</a>&nbsp;<a href="index-18.html">S</a>&nbsp;<a href="index-19.html">T</a>&nbsp;<a href="index-20.html">U</a>&nbsp;<a href="index-21.html">V</a>&nbsp;<a href="index-22.html">W</a>&nbsp;<a href="index-23.html">X</a>&nbsp;<a href="index-24.html">Z</a>&nbsp;<a name="_I_">
<!--   -->
</a>
<h2 class="title">I</h2>
<dl>
<dt><span class="strong"><a href="../phoenix/record/media/VideoFormat.html#IMAGE">IMAGE</a></span> - 类 中的静态变量phoenix.record.media.<a href="../phoenix/record/media/VideoFormat.html" title="phoenix.record.media中的类">VideoFormat</a></dt>
<dd>&nbsp;</dd>
<dt><span class="strong"><a href="../phoenix/frame/browser/Const.html#IMAGE_DIR">IMAGE_DIR</a></span> - 接口 中的静态变量phoenix.frame.browser.<a href="../phoenix/frame/browser/Const.html" title="phoenix.frame.browser中的接口">Const</a></dt>
<dd>&nbsp;</dd>
<dt><a href="../phoenix/record/media/io/ImageOutputStreamAdapter.html" title="phoenix.record.media.io中的类"><span class="strong">ImageOutputStreamAdapter</span></a> - <a href="../phoenix/record/media/io/package-summary.html">phoenix.record.media.io</a>中的类</dt>
<dd>&nbsp;</dd>
<dt><span class="strong"><a href="../phoenix/record/media/io/ImageOutputStreamAdapter.html#ImageOutputStreamAdapter(javax.imageio.stream.ImageOutputStream)">ImageOutputStreamAdapter(ImageOutputStream)</a></span> - 类 的构造器phoenix.record.media.io.<a href="../phoenix/record/media/io/ImageOutputStreamAdapter.html" title="phoenix.record.media.io中的类">ImageOutputStreamAdapter</a></dt>
<dd>&nbsp;</dd>
<dt><a href="../phoenix/record/media/image/Images.html" title="phoenix.record.media.image中的类"><span class="strong">Images</span></a> - <a href="../phoenix/record/media/image/package-summary.html">phoenix.record.media.image</a>中的类</dt>
<dd>
<div class="block">处理截取的图片，保存图片的每个像素值</div>
</dd>
<dt><span class="strong"><a href="../phoenix/frame/powertools/GlobalParameter.html#ImagesPath">ImagesPath</a></span> - 类 中的静态变量phoenix.frame.powertools.<a href="../phoenix/frame/powertools/GlobalParameter.html" title="phoenix.frame.powertools中的类">GlobalParameter</a></dt>
<dd>&nbsp;</dd>
<dt><span class="strong"><a href="../phoenix/frame/powertools/ExcelTools.html#importCase(java.lang.String, java.lang.String, boolean)">importCase(String, String, boolean)</a></span> - 类 中的静态方法phoenix.frame.powertools.<a href="../phoenix/frame/powertools/ExcelTools.html" title="phoenix.frame.powertools中的类">ExcelTools</a></dt>
<dd>&nbsp;</dd>
<dt><span class="strong"><a href="../phoenix/frame/powertools/ExcelTools.html#importData(java.lang.String, java.lang.String)">importData(String, String)</a></span> - 类 中的静态方法phoenix.frame.powertools.<a href="../phoenix/frame/powertools/ExcelTools.html" title="phoenix.frame.powertools中的类">ExcelTools</a></dt>
<dd>&nbsp;</dd>
<dt><span class="strong"><a href="../phoenix/frame/log/PhoenixLogger.html#info(java.lang.String)">info(String)</a></span> - 类 中的静态方法phoenix.frame.log.<a href="../phoenix/frame/log/PhoenixLogger.html" title="phoenix.frame.log中的类">PhoenixLogger</a></dt>
<dd>&nbsp;</dd>
<dt><span class="strong"><a href="../phoenix/frame/powertools/StreamWrite.html#infoWrite(java.lang.String, java.lang.String)">infoWrite(String, String)</a></span> - 类 中的静态方法phoenix.frame.powertools.<a href="../phoenix/frame/powertools/StreamWrite.html" title="phoenix.frame.powertools中的类">StreamWrite</a></dt>
<dd>
<div class="block">创建新文件</div>
</dd>
<dt><span class="strong"><a href="../phoenix/frame/demo/InterfaceCasePlan.html#init()">init()</a></span> - 类 中的方法phoenix.frame.demo.<a href="../phoenix/frame/demo/InterfaceCasePlan.html" title="phoenix.frame.demo中的类">InterfaceCasePlan</a></dt>
<dd>&nbsp;</dd>
<dt><span class="strong"><a href="../phoenix/frame/flush/Client.html#initClient(java.lang.String, javax.swing.JLabel)">initClient(String, JLabel)</a></span> - 类 中的方法phoenix.frame.flush.<a href="../phoenix/frame/flush/Client.html" title="phoenix.frame.flush中的类">Client</a></dt>
<dd>
<div class="block">分布式模式的服务端，即指令发送端。</div>
</dd>
<dt><span class="strong"><a href="../phoenix/frame/view/BrowserFrame.html#initComponents()">initComponents()</a></span> - 类 中的方法phoenix.frame.view.<a href="../phoenix/frame/view/BrowserFrame.html" title="phoenix.frame.view中的类">BrowserFrame</a></dt>
<dd>&nbsp;</dd>
<dt><span class="strong"><a href="../phoenix/frame/dao/DataDTO.html#insertData(java.lang.String, java.util.List)">insertData(String, List&lt;String&gt;)</a></span> - 类 中的方法phoenix.frame.dao.<a href="../phoenix/frame/dao/DataDTO.html" title="phoenix.frame.dao中的类">DataDTO</a></dt>
<dd>&nbsp;</dd>
<dt><span class="strong"><a href="../phoenix/frame/dao/DataDTO.html#insertLogToDB(java.lang.String, java.util.LinkedList)">insertLogToDB(String, LinkedList&lt;String&gt;)</a></span> - 类 中的方法phoenix.frame.dao.<a href="../phoenix/frame/dao/DataDTO.html" title="phoenix.frame.dao中的类">DataDTO</a></dt>
<dd>&nbsp;</dd>
<dt><a href="../phoenix/frame/demo/InterfaceCase.html" title="phoenix.frame.demo中的类"><span class="strong">InterfaceCase</span></a> - <a href="../phoenix/frame/demo/package-summary.html">phoenix.frame.demo</a>中的类</dt>
<dd>
<div class="block">使用手动编码方式编写测试用例，继承 InterfaceCaseData 类，可直接使用该类中的关键方法<br>
 与使用界面配置相比，该方法使用起来方法更为灵活，且各种复杂的逻辑语句均可以在用例中使用<br>
 需要注意的是，启动自定义用例的入口方法名称必须为 run() ，这样使用组合模式组合时，该用例才能被启动<br>
 使用测试用例时，由于需要提供测试用例名称，需要明确该用例使用的所有操作单元都位于该用例下，否则会出现找不到元素<br></div>
</dd>
<dt><span class="strong"><a href="../phoenix/frame/demo/InterfaceCase.html#InterfaceCase(java.lang.String)">InterfaceCase(String)</a></span> - 类 的构造器phoenix.frame.demo.<a href="../phoenix/frame/demo/InterfaceCase.html" title="phoenix.frame.demo中的类">InterfaceCase</a></dt>
<dd>&nbsp;</dd>
<dt><a href="../phoenix/frame/caseinterface/InterfaceCaseData.html" title="phoenix.frame.caseinterface中的类"><span class="strong">InterfaceCaseData</span></a> - <a href="../phoenix/frame/caseinterface/package-summary.html">phoenix.frame.caseinterface</a>中的类</dt>
<dd>
<div class="block">为手动编写测试用例提供方法支持。</div>
</dd>
<dt><span class="strong"><a href="../phoenix/frame/caseinterface/InterfaceCaseData.html#InterfaceCaseData(java.lang.String)">InterfaceCaseData(String)</a></span> - 类 的构造器phoenix.frame.caseinterface.<a href="../phoenix/frame/caseinterface/InterfaceCaseData.html" title="phoenix.frame.caseinterface中的类">InterfaceCaseData</a></dt>
<dd>
<div class="block">通过使用构造方法传递用例名称，使用该用例名称从数据库中获取该用例下的所有操作单元的定位信息集、检查点标识信息<br></div>
</dd>
<dt><a href="../phoenix/frame/demo/InterfaceCasePlan.html" title="phoenix.frame.demo中的类"><span class="strong">InterfaceCasePlan</span></a> - <a href="../phoenix/frame/demo/package-summary.html">phoenix.frame.demo</a>中的类</dt>
<dd>
<div class="block">多个测试用例组装成测试计划，执行时会按组装顺序执行该计划下的所有用例<br></div>
</dd>
<dt><span class="strong"><a href="../phoenix/frame/demo/InterfaceCasePlan.html#InterfaceCasePlan()">InterfaceCasePlan()</a></span> - 类 的构造器phoenix.frame.demo.<a href="../phoenix/frame/demo/InterfaceCasePlan.html" title="phoenix.frame.demo中的类">InterfaceCasePlan</a></dt>
<dd>&nbsp;</dd>
<dt><a href="../phoenix/frame/demo/InterfaceCaseScenario.html" title="phoenix.frame.demo中的类"><span class="strong">InterfaceCaseScenario</span></a> - <a href="../phoenix/frame/demo/package-summary.html">phoenix.frame.demo</a>中的类</dt>
<dd>
<div class="block">多个测试计划组装成测试场景，执行时按组装顺序执行该场景下的所有计划<br></div>
</dd>
<dt><span class="strong"><a href="../phoenix/frame/demo/InterfaceCaseScenario.html#InterfaceCaseScenario()">InterfaceCaseScenario()</a></span> - 类 的构造器phoenix.frame.demo.<a href="../phoenix/frame/demo/InterfaceCaseScenario.html" title="phoenix.frame.demo中的类">InterfaceCaseScenario</a></dt>
<dd>&nbsp;</dd>
<dt><span class="strong"><a href="../phoenix/frame/powertools/JTextAreaMouseMenu.html#isCanCopy()">isCanCopy()</a></span> - 类 中的方法phoenix.frame.powertools.<a href="../phoenix/frame/powertools/JTextAreaMouseMenu.html" title="phoenix.frame.powertools中的类">JTextAreaMouseMenu</a></dt>
<dd>
<div class="block">文本组件中是否具备复制的条件</div>
</dd>
<dt><span class="strong"><a href="../phoenix/frame/powertools/FlowTableModel.html#isCellEditable(int, int)">isCellEditable(int, int)</a></span> - 类 中的方法phoenix.frame.powertools.<a href="../phoenix/frame/powertools/FlowTableModel.html" title="phoenix.frame.powertools中的类">FlowTableModel</a></dt>
<dd>
<div class="block">让表格中某些值可修改，但需要setValueAt(Object value, int row, int col)方法配合才能使修改生效</div>
</dd>
<dt><span class="strong"><a href="../phoenix/frame/powertools/JTextAreaMouseMenu.html#isClipboardString()">isClipboardString()</a></span> - 类 中的方法phoenix.frame.powertools.<a href="../phoenix/frame/powertools/JTextAreaMouseMenu.html" title="phoenix.frame.powertools中的类">JTextAreaMouseMenu</a></dt>
<dd>
<div class="block">剪切板中是否有文本数据可供粘贴</div>
</dd>
<dt><span class="strong"><a href="../phoenix/frame/flush/NetworkCheck.html#isConnect(java.lang.String)">isConnect(String)</a></span> - 类 中的方法phoenix.frame.flush.<a href="../phoenix/frame/flush/NetworkCheck.html" title="phoenix.frame.flush中的类">NetworkCheck</a></dt>
<dd>
<div class="block">判断网络连接状态，判断方式：ping 命令，接收ping结果。</div>
</dd>
<dt><span class="strong"><a href="../phoenix/record/media/avi/AVIWriter.html#isDataLimitReached()">isDataLimitReached()</a></span> - 类 中的方法phoenix.record.media.avi.<a href="../phoenix/record/media/avi/AVIWriter.html" title="phoenix.record.media.avi中的类">AVIWriter</a></dt>
<dd>&nbsp;</dd>
<dt><span class="strong"><a href="../phoenix/record/media/MovieWriter.html#isDataLimitReached()">isDataLimitReached()</a></span> - 接口 中的方法phoenix.record.media.<a href="../phoenix/record/media/MovieWriter.html" title="phoenix.record.media中的接口">MovieWriter</a></dt>
<dd>&nbsp;</dd>
<dt><span class="strong"><a href="../phoenix/frame/powertools/PropUtil.html#ISDelay">ISDelay</a></span> - 类 中的静态变量phoenix.frame.powertools.<a href="../phoenix/frame/powertools/PropUtil.html" title="phoenix.frame.powertools中的类">PropUtil</a></dt>
<dd>&nbsp;</dd>
<dt><span class="strong"><a href="../phoenix/frame/action/Action.html#isExist()">isExist()</a></span> - 类 中的方法phoenix.frame.action.<a href="../phoenix/frame/action/Action.html" title="phoenix.frame.action中的类">Action</a></dt>
<dd>
<div class="block">判断元素是否存在的方法。</div>
</dd>
<dt><span class="strong"><a href="../phoenix/frame/struct/ElementOperate.html#isExist()">isExist()</a></span> - 类 中的方法phoenix.frame.struct.<a href="../phoenix/frame/struct/ElementOperate.html" title="phoenix.frame.struct中的类">ElementOperate</a></dt>
<dd>&nbsp;</dd>
<dt><span class="strong"><a href="../phoenix/frame/log/CaseStepLog.html#isExit">isExit</a></span> - 类 中的静态变量phoenix.frame.log.<a href="../phoenix/frame/log/CaseStepLog.html" title="phoenix.frame.log中的类">CaseStepLog</a></dt>
<dd>&nbsp;</dd>
<dt><span class="strong"><a href="../phoenix/frame/flush/NetworkCheck.html#isReachableIP(java.lang.String)">isReachableIP(String)</a></span> - 类 中的方法phoenix.frame.flush.<a href="../phoenix/frame/flush/NetworkCheck.html" title="phoenix.frame.flush中的类">NetworkCheck</a></dt>
<dd>
<div class="block">校验网络健康状况。</div>
</dd>
<dt><span class="strong"><a href="../phoenix/frame/flush/NetworkCheck.html#isReachableIP(java.lang.String, int)">isReachableIP(String, int)</a></span> - 类 中的方法phoenix.frame.flush.<a href="../phoenix/frame/flush/NetworkCheck.html" title="phoenix.frame.flush中的类">NetworkCheck</a></dt>
<dd>
<div class="block">校验网络健康状况。</div>
</dd>
<dt><span class="strong"><a href="../phoenix/frame/flush/Client.html#isRunFlag()">isRunFlag()</a></span> - 类 中的静态方法phoenix.frame.flush.<a href="../phoenix/frame/flush/Client.html" title="phoenix.frame.flush中的类">Client</a></dt>
<dd>&nbsp;</dd>
<dt><span class="strong"><a href="../phoenix/frame/view/RunMonitor.html#isRunMainFrame()">isRunMainFrame()</a></span> - 类 中的方法phoenix.frame.view.<a href="../phoenix/frame/view/RunMonitor.html" title="phoenix.frame.view中的类">RunMonitor</a></dt>
<dd>&nbsp;</dd>
<dt><span class="strong"><a href="../phoenix/frame/powertools/ServiceList.html#isValueExist(java.lang.String, java.util.List)">isValueExist(String, List&lt;String&gt;)</a></span> - 类 中的静态方法phoenix.frame.powertools.<a href="../phoenix/frame/powertools/ServiceList.html" title="phoenix.frame.powertools中的类">ServiceList</a></dt>
<dd>&nbsp;</dd>
<dt><span class="strong"><a href="../phoenix/record/media/avi/AVIWriter.html#isVFRSupported()">isVFRSupported()</a></span> - 类 中的方法phoenix.record.media.avi.<a href="../phoenix/record/media/avi/AVIWriter.html" title="phoenix.record.media.avi中的类">AVIWriter</a></dt>
<dd>&nbsp;</dd>
<dt><span class="strong"><a href="../phoenix/record/media/MovieWriter.html#isVFRSupported()">isVFRSupported()</a></span> - 接口 中的方法phoenix.record.media.<a href="../phoenix/record/media/MovieWriter.html" title="phoenix.record.media中的接口">MovieWriter</a></dt>
<dd>&nbsp;</dd>
</dl>
<a href="index-1.html">A</a>&nbsp;<a href="index-2.html">B</a>&nbsp;<a href="index-3.html">C</a>&nbsp;<a href="index-4.html">D</a>&nbsp;<a href="index-5.html">E</a>&nbsp;<a href="index-6.html">F</a>&nbsp;<a href="index-7.html">G</a>&nbsp;<a href="index-8.html">H</a>&nbsp;<a href="index-9.html">I</a>&nbsp;<a href="index-10.html">J</a>&nbsp;<a href="index-11.html">K</a>&nbsp;<a href="index-12.html">L</a>&nbsp;<a href="index-13.html">M</a>&nbsp;<a href="index-14.html">N</a>&nbsp;<a href="index-15.html">O</a>&nbsp;<a href="index-16.html">P</a>&nbsp;<a href="index-17.html">R</a>&nbsp;<a href="index-18.html">S</a>&nbsp;<a href="index-19.html">T</a>&nbsp;<a href="index-20.html">U</a>&nbsp;<a href="index-21.html">V</a>&nbsp;<a href="index-22.html">W</a>&nbsp;<a href="index-23.html">X</a>&nbsp;<a href="index-24.html">Z</a>&nbsp;</div>
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar_bottom">
<!--   -->
</a><a href="#skip-navbar_bottom" title="跳过导航链接"></a><a name="navbar_bottom_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">概览</a></li>
<li>程序包</li>
<li>类</li>
<li>使用</li>
<li><a href="../overview-tree.html">树</a></li>
<li><a href="../deprecated-list.html">已过时</a></li>
<li class="navBarCell1Rev">索引</li>
<li><a href="../help-doc.html">帮助</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="index-8.html">上一个字母</a></li>
<li><a href="index-10.html">下一个字母</a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?index-filesindex-9.html" target="_top">框架</a></li>
<li><a href="index-9.html" target="_top">无框架</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../allclasses-noframe.html">所有类</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<a name="skip-navbar_bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
